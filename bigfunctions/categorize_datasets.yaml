type: function_py
category: get_data
author:
  name: Paul Marcombes
  url: https://www.linkedin.com/in/paul-marcombes
  avatar_url: "https://lh3.googleusercontent.com/a/ACg8ocIAw-jJTmt7AkDhU6_OvDQwsy9uyuRiWX8MxUBOdpro8lRJEgk5=s288-c-no"
description: |
  Return `categories` of a list of tables. 

  Categories are generated by genAI given tables metadata stored in `fully_qualified_table_containing_tables_metadata` of which schema must contain:

  - `dataset`: string
  - `table`: string
  - `description`: string
  - `columns`: array of struct:
      - name
      - type
      - description
arguments:
  - name: datasets_xml
    type: string
output:
  name: categories
  type: json
examples:
  - description: ""
    arguments:
      - "'bigfunctions.us.bigquery_public_tables'"
    output: "&lt;html>...&lt;/html>"
init_code: |
  import json

  import vertexai
  from vertexai.generative_models import GenerationConfig, GenerativeModel, Part, HarmCategory, HarmBlockThreshold, SafetySetting  

  MODEL = "gemini-1.5-flash-002"
  PROMPT = '''
  As a data manager you want to organize DATASETS into CATEGORIES and SUBCATEGORIES to improve data discovery in a data catalog.

  Return a hierarchy of CATEGORIES and their SUBCATEGORIES which contain the DATASETS listed in file.
  
  The returned hierarchy will respect the following constraints:
  - Each CATEGORY must have between 2 and 10 SUBCATEGORIES
  - Each SUBCATEGORY must have between 2 and 10 DATASETS
  - Each DATASET must be within one SUBCATEGORY.
  - Do not invent any DATASET

  '''

  response_schema = {
    "title": "Categorized Datasets",
    "description": "Schema for datasets organized into categories and subcategories.",
    "type": "object",
    "properties": {
      "categories": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the category",
            },
            "subcategories": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the subcategory",
                  },
                  "datasets": {
                    "type": "array",
                    "items": {
                      "type": "string",
                    }
                  }
                },
                "required": ["name", "datasets"]
              }
            }
          },
          "required": ["name", "subcategories"]
        }
      }
    },
    "required": ["categories"]
  }

  generation_config=GenerationConfig(
    response_mime_type="application/json", 
    response_schema=response_schema
  )

  safety_config = [
      SafetySetting(
          category=HarmCategory.HARM_CATEGORY_DANGEROUS_CONTENT,
          threshold=HarmBlockThreshold.OFF,
      ),
      SafetySetting(
          category=HarmCategory.HARM_CATEGORY_HARASSMENT,
          threshold=HarmBlockThreshold.OFF,
      ),
  ]

  vertexai.init(location=CURRENT_LOCATION)
  model = GenerativeModel(MODEL)
code: |
  if not datasets_xml:
    return []

  contents = [
      PROMPT,
      Part.from_text(datasets_xml),
  ]

  response = model.generate_content(
    contents, 
    safety_settings=safety_config, 
    generation_config=generation_config,
  )

  categories = response.text
  categories = json.loads(categories)
  dataset_categories = []
  for category in categories['categories']:
    for subcategory in category['subcategories']:
      for dataset in subcategory['datasets']:
        dataset_categories.append({
          "dataset": dataset,
          "path": f"{category['name']}/{subcategory['name']}/{dataset}"
        })
  return dataset_categories
requirements: |
  google-cloud-aiplatform
quotas:
  max_rows_per_query: 1
  max_rows_per_user_per_day: 100
