type: procedure
category: explore
author:
  name: Paul Marcombes
  url: https://www.linkedin.com/in/paul-marcombes
  avatar_url: "https://lh3.googleusercontent.com/a-/ACB-R5RDf2yxcw1p_IYLCKmiUIScreatDdhG8B83om6Ohw=s260"
description: Show tables with anomalous number of rows today
arguments:
  - name: project
    type: string
  - name: kwargs
    type: string
examples:
  - description: ""
    arguments:
      - '"bigfunctions"'
    screenshot: explore_column.png
code: |
  execute immediate replace(replace(
    '''
    create or replace temp table bigfunction_result as

    with row_count_by_table_and_date0 as (

      select
        table_schema || '.' || table_name as table,
        date(timestamp) as date,
        max(total_rows) as row_count,
      from `PROJECT.region-eu.INFORMATION_SCHEMA.TABLE_STORAGE_TIMELINE`
      where date(timestamp) > current_date - 90
      and table_schema = "SQLSERVER"
      group by 1, 2
    ),

    row_count_by_table_and_date as (
      select
        today.table,
        today.date,
        today.row_count - yesterday.row_count as row_count,
      from row_count_by_table_and_date0 today
      inner join row_count_by_table_and_date0 yesterday
      on today.table = yesterday.table and today.date = yesterday.date + 1
    ),

    row_count_timeseries_by_table as (

      select
        table,
        array_agg(
          struct(
              date as ds,
              row_count as y
          )
          order by date
        ) as row_count_timeseries
      from row_count_by_table_and_date
      where date < current_date
      group by 1
    ),

    predicted_today_row_count_by_table as (
      select
        table,
        row_count_timeseries,
        bigfunctions.eu.prophet(to_json(row_count_timeseries), 1, json 'KWARGS')[0] as forecast,
      from row_count_timeseries_by_table
      where array_length(row_count_timeseries) >= 2
    )

    select
      table,
      row_count_timeseries,
      row_count_by_table_and_date.row_count as today_row_count,
      forecast.yhat,
      forecast.yhat_upper,
      forecast.yhat_lower,
      (row_count_by_table_and_date.row_count between cast(json_value(forecast.yhat_lower) as float64) and cast(json_value(forecast.yhat_upper) as float64)) is_ok,
    from predicted_today_row_count_by_table
    inner join row_count_by_table_and_date using(table)
    where
      row_count_by_table_and_date.date = current_date
      and row_count_by_table_and_date.row_count != 0
    ''',
    'PROJECT', project),
    'KWARGS', kwargs
  );