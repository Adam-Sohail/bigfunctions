type: function_py
author: "Credits: Felipe Hoffa"
description: |
  Forecast time-series using [prophet](https://facebook.github.io/prophet/docs/quick_start.html#python-api)
  python library.


  (inspired from [this Felipe Hoffa medium's post](https://medium.com/snowflake/facebook-prophet-forecasts-running-in-snowflake-with-snowpark-14fc870b56ae))
arguments:
  - name: records
    type: json
  - name: periods
    type: float64
  - name: kwargs
    type: json
output:
  name: forecasted_records
  type: json
examples:
  - description: ""
    with_clause: |
        select date('2022-01-01') as date, 1 as value,
        union all
        select date('2022-01-02') as date, 2 as value,
    arguments:
      - to_json(array_agg(struct(date as ds, sale as y)))
      - 3
      - null
    output: '{"created_at": "date", "user.name": "string", "user.friends": "array"}'
code: |
  import pandas as pd
  from prophet import Prophet
  df = pd.DataFrame(records)
  assert 'ds' in df.columns, '`records` must have a field named `ds` with represents the record date'
  assert 'y' in df.columns, '`records` must have a field named `y` which represents the record value'
  kwargs = kwargs or {}
  model = Prophet(**kwargs)
  model.fit(df)
  future_df = model.make_future_dataframe(periods=periods, include_history=False)
  forecast = model.predict(future_df)
  forecast['ds'] = forecast['ds'].astype(str)
  return forecast.to_dict(orient='records')
requirements: |
  pandas
  prophet
cloud_run:
  max_instances: 20
  concurrency: 1
